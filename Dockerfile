# Step 1: Create the build artifacts
FROM node:22.14.0-alpine AS build
WORKDIR /app
ENV PATH /app/node_modules/.bin:$PATH
COPY package.json ./
COPY package-lock.json ./
RUN npm ci --silent

COPY . ./

ARG HOST_ENV
ARG VERSION
ARG CONTROL_PANEL_API
ARG VIEWER_API
ARG VIEWER_JWT_KEY
ARG GOOGLE_MAPS_KEY
ARG PUBLIC_POSTHOG_KEY
ARG GA_TRACKING_ID
ARG MIXPANEL_KEY
ARG HOSTNAME_PARTS
ARG SWAP_CP
ARG VIEWER_PAGE_SUBDOMAIN
ARG GITHUB_JS_PATH
ARG CDN_JS_PATH

ARG SOCIAL_META

ENV VITE_HOST_ENV=$HOST_ENV
ENV VITE_VERSION=$VERSION
ENV VITE_CONTROL_PANEL_API=$CONTROL_PANEL_API
ENV VITE_VIEWER_API=$VIEWER_API
ENV VITE_VIEWER_JWT_KEY=$VIEWER_JWT_KEY
ENV VITE_GOOGLE_MAPS_KEY=$GOOGLE_MAPS_KEY
ENV VITE_PUBLIC_POSTHOG_KEY=$PUBLIC_POSTHOG_KEY
ENV VITE_GA_TRACKING_ID=$GA_TRACKING_ID
ENV VITE_MIXPANEL_KEY=$MIXPANEL_KEY
ENV VITE_HOSTNAME_PARTS=$HOSTNAME_PARTS
ENV VITE_SWAP_CP=$SWAP_CP
ENV VITE_VIEWER_PAGE_SUBDOMAIN=$VIEWER_PAGE_SUBDOMAIN
ENV VITE_GITHUB_JS_PATH=$GITHUB_JS_PATH
ENV VITE_CDN_JS_PATH=$CDN_JS_PATH

ARG VITE_SOCIAL_META=$SOCIAL_META

RUN npm run build

# Step 2: Create the compact production image
FROM node:22.14.0-alpine AS production
WORKDIR /app
COPY --from=build /app/dist ./dist
RUN npm install serve -g --silent

EXPOSE 3000

# start the web server
CMD ["serve", "-s", "/app/dist"]
